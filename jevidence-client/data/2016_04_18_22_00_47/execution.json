{"startedAt":"2016-04-18 22:00:47:574","finishedAt":"2016-04-18 22:00:47:912","duration":338,"testClasses":[{"name":"pl.lstypka.ExampleServiceAddTest","tests":[{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:639","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:736","message":"LOGGER: first number 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:736","message":"first number = 0"},{"level":"info","timestamp":"2016-04-18 22:00:47:737","message":"LOGGER: first number 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:737","message":"first number = 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:848","message":"Sum = 0"},{"level":"info","timestamp":"2016-04-18 22:00:47:851","message":"Test success listener"}],"status":"SUCCESS","name":"shouldAdd0And0","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:575","finishedAt":"2016-04-18 22:00:47:848","duration":273},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:640","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:726","message":"LOGGER: first number -4"},{"level":"success","timestamp":"2016-04-18 22:00:47:727","message":"first number = -4"},{"level":"info","timestamp":"2016-04-18 22:00:47:729","message":"LOGGER: first number 3"},{"level":"success","timestamp":"2016-04-18 22:00:47:729","message":"first number = 3"},{"level":"screenshot","timestamp":"2016-04-18 22:00:47:729","message":"Wallpaper","screenshot":"data\\2016_04_18_22_00_47\\img\\1.jpg"},{"level":"info","timestamp":"2016-04-18 22:00:47:738","message":"Test success listener"}],"status":"SUCCESS","name":"shouldAttachScreenshot","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:574","finishedAt":"2016-04-18 22:00:47:729","duration":155},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:639","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:733","message":"LOGGER: first number 4"},{"level":"success","timestamp":"2016-04-18 22:00:47:733","message":"first number = 4"},{"level":"info","timestamp":"2016-04-18 22:00:47:734","message":"LOGGER: first number 3"},{"level":"success","timestamp":"2016-04-18 22:00:47:734","message":"first number = 3"},{"level":"success","timestamp":"2016-04-18 22:00:47:802","message":"Sum = 7"},{"level":"info","timestamp":"2016-04-18 22:00:47:814","message":"Test success listener"}],"status":"SUCCESS","name":"shouldAdd4And3","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:574","finishedAt":"2016-04-18 22:00:47:802","duration":228},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:639","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:743","message":"LOGGER: first number 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:743","message":"first number = 0"},{"level":"info","timestamp":"2016-04-18 22:00:47:748","message":"LOGGER: first number 2"},{"level":"success","timestamp":"2016-04-18 22:00:47:748","message":"first number = 2"},{"level":"success","timestamp":"2016-04-18 22:00:47:755","message":"Sum = 2"},{"level":"info","timestamp":"2016-04-18 22:00:47:766","message":"Test success listener"}],"status":"SUCCESS","name":"shouldAdd0And2","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:574","finishedAt":"2016-04-18 22:00:47:762","duration":188},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:639","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:742","message":"LOGGER: first number -4"},{"level":"success","timestamp":"2016-04-18 22:00:47:742","message":"first number = -4"},{"level":"info","timestamp":"2016-04-18 22:00:47:744","message":"LOGGER: first number 3"},{"level":"success","timestamp":"2016-04-18 22:00:47:744","message":"first number = 3"},{"level":"info","timestamp":"2016-04-18 22:00:47:746","message":"Test failure listener"},{"assertionError":false,"level":"error","timestamp":"2016-04-18 22:00:47:921","message":"Random error","stacktrace":"java.lang.RuntimeException: Random error\r\n\tat pl.lstypka.jevidence.core.ExampleService.randomError(ExampleService.java:67)\r\n\tat pl.lstypka.jevidence.core.ExampleService.sum(ExampleService.java:44)\r\n\tat pl.lstypka.ExampleServiceAddTest.shouldAddMinu4And3(ExampleServiceAddTest.java:68)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n","isAssertionError":false}],"status":"ERROR","name":"shouldAddMinu4And3","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:575","finishedAt":"2016-04-18 22:00:47:745","duration":170}],"skipped":0,"failed":0,"errors":1,"passed":4,"startedAt":"2016-04-18 22:00:47:574","finishedAt":"2016-04-18 22:00:47:848","duration":274},{"name":"pl.lstypka.ExampleServiceSubtractTest","tests":[{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:805","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:814","message":"LOGGER: first number -4"},{"level":"success","timestamp":"2016-04-18 22:00:47:814","message":"first number = -4"},{"level":"info","timestamp":"2016-04-18 22:00:47:816","message":"LOGGER: first number 3"},{"level":"success","timestamp":"2016-04-18 22:00:47:816","message":"first number = 3"},{"level":"screenshot","timestamp":"2016-04-18 22:00:47:816","message":"Wallpaper","screenshot":"data\\2016_04_18_22_00_47\\img\\2.jpg"},{"level":"info","timestamp":"2016-04-18 22:00:47:816","message":"Test success listener"}],"status":"SUCCESS","name":"shouldAttachScreenshot","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:803","finishedAt":"2016-04-18 22:00:47:816","duration":13},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:819","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:820","message":"LOGGER: first number 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:820","message":"first number = 0"},{"level":"info","timestamp":"2016-04-18 22:00:47:820","message":"LOGGER: first number 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:820","message":"first number = 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:844","message":"Substract = 0"},{"level":"info","timestamp":"2016-04-18 22:00:47:845","message":"Test success listener"}],"status":"SUCCESS","name":"shouldSubtract0And0","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:817","finishedAt":"2016-04-18 22:00:47:844","duration":27},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:821","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:822","message":"LOGGER: first number 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:822","message":"first number = 0"},{"level":"info","timestamp":"2016-04-18 22:00:47:823","message":"LOGGER: first number 2"},{"level":"success","timestamp":"2016-04-18 22:00:47:823","message":"first number = 2"},{"level":"success","timestamp":"2016-04-18 22:00:47:826","message":"Substract = 2"},{"level":"info","timestamp":"2016-04-18 22:00:47:828","message":"Test success listener"}],"status":"SUCCESS","name":"shouldSubtract0And2","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:821","finishedAt":"2016-04-18 22:00:47:826","duration":5},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:913","message":"Test skipped listener"},{"assertionError":false,"level":"error","timestamp":"2016-04-18 22:00:47:921","message":"Skipped test","stacktrace":"org.testng.SkipException: Skipped test\r\n\tat pl.lstypka.ExampleServiceSubtractTest.shouldSubtractMinus4And3(ExampleServiceSubtractTest.java:68)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n","isAssertionError":false}],"status":"SKIPPED","name":"shouldSubtractMinus4And3","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:829","finishedAt":"2016-04-18 22:00:47:912","duration":83},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:826","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:840","message":"LOGGER: first number 4"},{"level":"success","timestamp":"2016-04-18 22:00:47:840","message":"first number = 4"},{"level":"info","timestamp":"2016-04-18 22:00:47:842","message":"LOGGER: first number 3"},{"level":"success","timestamp":"2016-04-18 22:00:47:842","message":"first number = 3"},{"level":"info","timestamp":"2016-04-18 22:00:47:843","message":"Test failure listener"},{"assertionError":false,"level":"error","timestamp":"2016-04-18 22:00:47:921","message":"Random error","stacktrace":"java.lang.RuntimeException: Random error\r\n\tat pl.lstypka.jevidence.core.ExampleService.randomError(ExampleService.java:67)\r\n\tat pl.lstypka.jevidence.core.ExampleService.subtract(ExampleService.java:51)\r\n\tat pl.lstypka.ExampleServiceSubtractTest.shouldSubtract4And3(ExampleServiceSubtractTest.java:25)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n","isAssertionError":false}],"status":"ERROR","name":"shouldSubtract4And3","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:822","finishedAt":"2016-04-18 22:00:47:842","duration":20}],"skipped":1,"failed":0,"errors":1,"passed":3,"startedAt":"2016-04-18 22:00:47:803","finishedAt":"2016-04-18 22:00:47:912","duration":109},{"name":"pl.lstypka.ExampleServiceMultiplyTest","tests":[{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:776","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:777","message":"LOGGER: first number 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:777","message":"first number = 0"},{"level":"info","timestamp":"2016-04-18 22:00:47:779","message":"LOGGER: first number 2"},{"level":"success","timestamp":"2016-04-18 22:00:47:779","message":"first number = 2"},{"level":"success","timestamp":"2016-04-18 22:00:47:821","message":"Multiply = 2"},{"level":"info","timestamp":"2016-04-18 22:00:47:822","message":"Test success listener"}],"status":"SUCCESS","name":"shouldMultiply0And2","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:775","finishedAt":"2016-04-18 22:00:47:821","duration":46},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:746","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:773","message":"LOGGER: first number -4"},{"level":"success","timestamp":"2016-04-18 22:00:47:773","message":"first number = -4"},{"level":"info","timestamp":"2016-04-18 22:00:47:774","message":"LOGGER: first number 3"},{"level":"success","timestamp":"2016-04-18 22:00:47:774","message":"first number = 3"},{"level":"screenshot","timestamp":"2016-04-18 22:00:47:774","message":"Wallpaper","screenshot":"data\\2016_04_18_22_00_47\\img\\3.jpg"},{"level":"info","timestamp":"2016-04-18 22:00:47:780","message":"Test success listener"}],"status":"SUCCESS","name":"shouldAttachScreenshot","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:739","finishedAt":"2016-04-18 22:00:47:774","duration":35},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:769","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:775","message":"LOGGER: first number 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:775","message":"first number = 0"},{"level":"info","timestamp":"2016-04-18 22:00:47:780","message":"LOGGER: first number 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:780","message":"first number = 0"},{"level":"success","timestamp":"2016-04-18 22:00:47:855","message":"Multiply = 0"},{"level":"info","timestamp":"2016-04-18 22:00:47:856","message":"Test success listener"}],"status":"SUCCESS","name":"shouldMultiply0And0","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:768","finishedAt":"2016-04-18 22:00:47:855","duration":87},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:782","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:783","message":"LOGGER: first number 4"},{"level":"success","timestamp":"2016-04-18 22:00:47:783","message":"first number = 4"},{"level":"info","timestamp":"2016-04-18 22:00:47:787","message":"LOGGER: first number 3"},{"level":"success","timestamp":"2016-04-18 22:00:47:787","message":"first number = 3"},{"level":"info","timestamp":"2016-04-18 22:00:47:790","message":"Test failure listener"},{"assertionError":false,"level":"error","timestamp":"2016-04-18 22:00:47:921","message":"Random error","stacktrace":"java.lang.RuntimeException: Random error\r\n\tat pl.lstypka.jevidence.core.ExampleService.randomError(ExampleService.java:67)\r\n\tat pl.lstypka.jevidence.core.ExampleService.multiply(ExampleService.java:59)\r\n\tat pl.lstypka.ExampleServiceMultiplyTest.shouldMultiply4And3(ExampleServiceMultiplyTest.java:24)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n","isAssertionError":false}],"status":"ERROR","name":"shouldMultiply4And3","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:781","finishedAt":"2016-04-18 22:00:47:787","duration":6},{"steps":[{"level":"info","timestamp":"2016-04-18 22:00:47:795","message":"Test started listener"},{"level":"info","timestamp":"2016-04-18 22:00:47:795","message":"LOGGER: first number -4"},{"level":"success","timestamp":"2016-04-18 22:00:47:796","message":"first number = -4"},{"level":"info","timestamp":"2016-04-18 22:00:47:797","message":"LOGGER: first number 3"},{"level":"success","timestamp":"2016-04-18 22:00:47:797","message":"first number = 3"},{"level":"info","timestamp":"2016-04-18 22:00:47:802","message":"Test failure listener"},{"assertionError":false,"level":"error","timestamp":"2016-04-18 22:00:47:922","message":"Random error","stacktrace":"java.lang.RuntimeException: Random error\r\n\tat pl.lstypka.jevidence.core.ExampleService.randomError(ExampleService.java:67)\r\n\tat pl.lstypka.jevidence.core.ExampleService.multiply(ExampleService.java:59)\r\n\tat pl.lstypka.ExampleServiceMultiplyTest.shouldMultiplyMinus4And3(ExampleServiceMultiplyTest.java:63)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n","isAssertionError":false}],"status":"ERROR","name":"shouldMultiplyMinus4And3","params":{"Execution":"example suite"},"startedAt":"2016-04-18 22:00:47:794","finishedAt":"2016-04-18 22:00:47:797","duration":3}],"skipped":0,"failed":0,"errors":2,"passed":3,"startedAt":"2016-04-18 22:00:47:739","finishedAt":"2016-04-18 22:00:47:855","duration":116}],"skipped":1,"failed":0,"errors":4,"passed":10}